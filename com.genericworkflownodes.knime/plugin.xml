<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.4"?>

<plugin>

   <extension-point id="com.genericworkflownodes.knime.mime.demangler.Demangler" name="Demangler" schema="schema/com.genericworkflownodes.knime.mime.demangler.Demangler.exsd"/>
   <extension-point id="com.genericworkflownodes.knime.execution.CommandGenerator" name="CommandGenerator" schema="schema/com.genericworkflownodes.knime.execution.CommandGenerator.exsd"/>
   <extension-point id="com.genericworkflownodes.knime.execution.Executor" name="Executor" schema="schema/com.genericworkflownodes.knime.execution.Executor.exsd"/>
   <extension-point id="com.genericworkflownodes.knime.dynamic.VersionedNodeSetFactory" name="VersionedNodeSetFactory" schema="schema/com.genericworkflownodes.knime.dynamic.VersionedNodeSetFactory.exsd"/>
   <extension-point id="com.genericworkflownodes.knime.filesplitter" name="File Splitter" schema="schema/com.genericworkflownodes.knime.filesplitter.exsd"/>
   <extension-point id="com.genericworkflownodes.knime.custom.config.DLLProvider" name="DLLProvider" schema="schema/com.genericworkflownodes.knime.custom.config.DLLProvider.exsd"/>
   <extension-point id="com.genericworkflownodes.knime.mime.filesuffix.Checker" name="filesuffixChecker" schema="schema/com.genericworkflownodes.knime.mime.filesuffix.Checker.exsd"/>

   <extension point="org.knime.workbench.repository.categories">
    <category description="/community/GenericKnimeNodes" icon="icons/category.png" level-id="GenericKnimeNodes" name="GenericKnimeNodes" path="/community"/>
    <category description="/community/GenericKnimeNodes/IO" icon="icons/category.png" level-id="IO" name="IO" path="/community/GenericKnimeNodes"/>
    <category description="/community/GenericKnimeNodes/View" icon="icons/category.png" level-id="Util" name="Util" path="/community/GenericKnimeNodes"/>
    <category description="/community/GenericKnimeNodes/KNIMEConversion" icon="icons/category.png" level-id="KNIMEConversion" name="KNIMEConversion" path="/community/GenericKnimeNodes"/>
    <category description="/community/GenericKnimeNodes/KNIMEConversion" icon="icons/category.png" level-id="Flow" name="Flow" path="/community/GenericKnimeNodes"/>
    <category
          icon="icons/category.png"
          level-id="GenericKNIMENodeCluster"
          locked="true"
          name="GenericKNIMENodeCluster"
          path="/community/GenericKnimeNodes">
    </category>
   </extension>

   <extension point="org.knime.workbench.repository.nodes">
    <node
          category-path="/community/GenericKnimeNodes/IO"
          deprecated="true"
          factory-class="com.genericworkflownodes.knime.nodes.io.importer.MimeFileImporterNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/IO" factory-class="com.genericworkflownodes.knime.nodes.io.outputfile.OutputFileNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/Util" factory-class="com.genericworkflownodes.knime.nodes.io.viewer.MimeFileViewerNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/IO" factory-class="com.genericworkflownodes.knime.nodes.io.listimporter.ListMimeFileImporterNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/IO" factory-class="com.genericworkflownodes.knime.nodes.io.outputfiles.OutputFilesNodeFactory"/>
	<node category-path="/community/GenericKnimeNodes/IO" factory-class="com.genericworkflownodes.knime.nodes.io.outputfolder.OutputFolderNodeFactory"/>
	<node category-path="/community/GenericKnimeNodes/IO" factory-class="com.genericworkflownodes.knime.nodes.io.dirloader.DirectoryLoaderNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/KNIMEConversion" factory-class="com.genericworkflownodes.knime.nodes.io.demangler.DemanglerNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/KNIMEConversion" factory-class="com.genericworkflownodes.knime.nodes.io.mangler.ManglerNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/Util" factory-class="com.genericworkflownodes.knime.nodes.flow.beanshell.BeanShellNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/Flow" factory-class="com.genericworkflownodes.knime.nodes.flow.listzip.ListZipLoopStartNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/Flow" factory-class="com.genericworkflownodes.knime.nodes.flow.listzip.ListZipLoopEndNodeFactory"/>
   	<node category-path="/community/GenericKnimeNodes/Flow" factory-class="com.genericworkflownodes.knime.nodes.flow.merger.FileMergerNodeFactory"/>
	<node category-path="/community/GenericKnimeNodes/Flow" factory-class="com.genericworkflownodes.knime.nodes.flow.image2file.Image2FilePortNodeFactory"/>
    <node category-path="/community/GenericKnimeNodes/Flow" factory-class="com.genericworkflownodes.knime.nodes.flow.splitter.FileSplitterNodeFactory"/>
	<node
          category-path="/community/GenericKnimeNodes/GenericKNIMENodeCluster"
          deprecated="false"
          factory-class="com.genericworkflownodes.knime.cluster.nodes.filesplitter.FileSplitterNodeFactory">
    </node>
    <node
          category-path="/community/GenericKnimeNodes/GenericKNIMENodeCluster"
          deprecated="false"
          factory-class="com.genericworkflownodes.knime.cluster.nodes.splittabletoport.SplitTableToPortNodeFactory">
    </node>
    <node
          category-path="/community/GenericKnimeNodes/GenericKNIMENodeCluster"
          deprecated="false"
          factory-class="com.genericworkflownodes.knime.cluster.nodes.porttofilestore.PortToFileStoreNodeFactory">
    </node>
    <node
          category-path="/community/GenericKnimeNodes/IO"
          deprecated="false"
          factory-class="com.genericworkflownodes.knime.nodes.io.nioimporter.MimeFileNioImporterNodeFactory"
          hidden="false">
    </node>
   </extension>

   <extension point="org.knime.product.splashExtension">
        <splashExtension icon="icons/GKN.png" id="com.genericworkflownodes.knime.splashExtension"/>
   </extension>

   <extension point="org.eclipse.equinox.preferences.preferences">
      <initializer class="com.genericworkflownodes.knime.preferences.PreferenceInitializer"/>
   </extension>

   <extension point="org.eclipse.ui.preferencePages">
      <page category="org.knime.workbench.ui.preferences" class="com.genericworkflownodes.knime.preferences.PreferencePage" id="com.genericworkflownodes.knime.preferences.PreferencePage" name="Generic KNIME Nodes"/>
      <page category="org.knime.workbench.ui.preferences" class="com.genericworkflownodes.knime.preferences.DockerMachinePreferencePage" id="com.genericworkflownodes.knime.preferences.com.genericworkflownodes.knime.preferences.DockerMachinePreferencePage" name="GKN Docker"/>
   </extension>
   <extension
         point="com.genericworkflownodes.knime.execution.Executor">
      <executor
            class="com.genericworkflownodes.knime.execution.impl.LocalToolExecutor"
            name="LocalToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.LocalToolExecutor"
            name="com.genericworkflownodes.knime.execution.impl.LocalToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.LocalDockerToolExecutor"
            name="LocalDockerToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.LocalDockerToolExecutor"
            name="com.genericworkflownodes.knime.execution.impl.LocalDockerToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.SeqAnToolExecutor"
            name="SeqAnToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.SeqAnToolExecutor"
            name="com.genericworkflownodes.knime.execution.impl.SeqAnToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.OpenMSToolExecutor"
            name="OpenMSToolExecutor">
      </executor>
      <executor
            class="com.genericworkflownodes.knime.execution.impl.OpenMSToolExecutor"
            name="com.genericworkflownodes.knime.execution.impl.OpenMSToolExecutor">
      </executor>
   </extension>
   <extension
         point="com.genericworkflownodes.knime.execution.CommandGenerator">
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.BALLCommandGenerator"
            name="com.genericworkflownodes.knime.execution.impl.BALLCommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.CLICommandGenerator"
            name="com.genericworkflownodes.knime.execution.impl.CLICommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.OpenMSCommandGenerator"
            name="com.genericworkflownodes.knime.execution.impl.OpenMSCommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.DockerCommandGenerator"
            name="com.genericworkflownodes.knime.execution.impl.DockerCommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.BALLCommandGenerator"
            name="BALLCommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.CLICommandGenerator"
            name="CLICommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.OpenMSCommandGenerator"
            name="OpenMSCommandGenerator">
      </commandgenerator>
      <commandgenerator
            class="com.genericworkflownodes.knime.execution.impl.DockerCommandGenerator"
            name="DockerCommandGenerator">
      </commandgenerator>
   </extension>
   <extension
         point="org.knime.core.PortType">
      <portType
            hidden="false"
            name="FileStoreURIPort"
            objectClass="com.genericworkflownodes.knime.base.data.port.FileStoreURIPortObject"
            objectSerializer="com.genericworkflownodes.knime.base.data.port.FileStoreURIPortObjectSerializer"
            specClass="org.knime.core.data.uri.URIPortObjectSpec"
            specSerializer="org.knime.core.data.uri.URIPortObjectSpec$Serializer">
      </portType>
   </extension>
   <extension
         point="org.knime.core.PortType">
      <portType
            hidden="false"
            name="FileStorePrefixURIPort"
            objectClass="com.genericworkflownodes.knime.base.data.port.FileStorePrefixURIPortObject"
            objectSerializer="com.genericworkflownodes.knime.base.data.port.FileStorePrefixURIPortObjectSerializer"
            specClass="org.knime.core.data.uri.URIPortObjectSpec"
            specSerializer="org.knime.core.data.uri.URIPortObjectSpec$Serializer">
      </portType>
   </extension>
   <extension
         point="org.knime.core.PortType">
      <portType
            hidden="false"
            name="FileStoreReferenceURIPort"
            objectClass="com.genericworkflownodes.knime.base.data.port.FileStoreReferenceURIPortObject"
            objectSerializer="com.genericworkflownodes.knime.base.data.port.FileStoreReferenceURIPortObjectSerializer"
            specClass="org.knime.core.data.uri.URIPortObjectSpec"
            specSerializer="org.knime.core.data.uri.URIPortObjectSpec$Serializer">
      </portType>
   </extension>
   <extension
         point="org.knime.core.DataType">
      <DataType
            cellClass="com.genericworkflownodes.knime.base.data.port.PortObjectHandlerCell">
         <serializer
               cellClass="com.genericworkflownodes.knime.base.data.port.PortObjectHandlerCell"
               serializerClass="com.genericworkflownodes.knime.base.data.port.PortObjectHandlerCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="com.genericworkflownodes.knime.base.data.port.PrefixFileStoreCell">
         <serializer
               cellClass="com.genericworkflownodes.knime.base.data.port.PrefixFileStoreCell"
               serializerClass="com.genericworkflownodes.knime.base.data.port.PrefixFileStoreCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="com.genericworkflownodes.knime.base.data.port.PrefixFileStoreCell">
         <serializer
               cellClass="com.genericworkflownodes.knime.base.data.port.PrefixFileStoreCell"
               serializerClass="com.genericworkflownodes.knime.base.data.port.PrefixFileStoreCellSerializer">
         </serializer>
      </DataType>
      <DataType
            cellClass="com.genericworkflownodes.knime.base.data.port.SimpleFileStoreCell">
         <serializer
               cellClass="com.genericworkflownodes.knime.base.data.port.SimpleFileStoreCell"
               serializerClass="com.genericworkflownodes.knime.base.data.port.SimpleFileStoreCellSerializer">
         </serializer>
      </DataType>
   </extension>
   <extension
         point="org.knime.workbench.repository.nodesets">
      <nodeset
            default-category-icon="icons/category.png"
            deprecated="false"
            factory-class="com.genericworkflownodes.knime.dynamic.VersionedNodeSetFactoryManager">
      </nodeset>
   </extension>
   <extension
         point="org.knime.core.DataValueRenderer">
      <dataValue
            valueClass="com.genericworkflownodes.knime.base.data.port.FileStoreValue">
         <renderer
               rendererFactoryClass="com.genericworkflownodes.knime.base.data.port.FileStoreValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
   </extension>
   <extension
         point="com.genericworkflownodes.knime.filesplitter">
      <fileSplitter
            class="com.genericworkflownodes.knime.cluster.filesplitter.impl.LineSplitterFactory">
      </fileSplitter>
   </extension>
   <extension
      point="com.genericworkflownodes.knime.mime.filesuffix.Checker">
   <index-type name="yara">
      <suffix
            suffix_string="lf.drp">
      </suffix>
      <suffix
            suffix_string="lf.drs">
      </suffix>
      <suffix
            suffix_string="lf.drv">
      </suffix>
      <suffix
            suffix_string="lf.pst">
      </suffix>
      <suffix
            suffix_string="sa.ind">
      </suffix>
      <suffix
            suffix_string="sa.len">
      </suffix>
      <suffix
            suffix_string="sa.val">
      </suffix>
      <suffix
            suffix_string="txt.concat">
      </suffix>
      <suffix
            suffix_string="txt.limits">
      </suffix>
      <suffix
            suffix_string="txt.size">
      </suffix>
   </index-type>
   <index-type name="bowtie">
      <suffix
            suffix_string="1.ebwt">
      </suffix>
      <suffix
            suffix_string="2.ebwt">
      </suffix>
      <suffix
            suffix_string="3.ebwt">
      </suffix>
      <suffix
            suffix_string="4.ebwt">
      </suffix>
   </index-type>   
   <index-type name="bowtie2"> 
      <suffix
            suffix_string="1.bt2">            
      </suffix>
      <suffix
            suffix_string="2.bt2">            
      </suffix>
      <suffix
            suffix_string="3.bt2">            
      </suffix>
      <suffix
            suffix_string="4.bt2">            
      </suffix>          
   </index-type>   
   <index-type name="bwa">
      <suffix 
      		suffix_string="amb">
      </suffix>
      <suffix 
      		suffix_string="ann">
      </suffix>
      <suffix 
      		suffix_string="bwt">
      </suffix>
      <suffix 
      		suffix_string="pac">
      </suffix>
      <suffix 
      		suffix_string="sa">
      </suffix>
   </index-type>
   </extension>  
</plugin>
